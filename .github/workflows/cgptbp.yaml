---
# Filename: .github/workflows/branch-protection.yaml
name: "Set Branch Protection"
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Global environment variable for authentication
jobs:
  set-branch-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v4
      - name: Determine Branch for Protection
        id: determine-branch
        shell: bash
        run: |
          if [[ \
          "${{ github.ref }}" == \
          "refs/heads/${{ github.event.repository.default_branch }}" \
          ]]; then
            echo "Applying protection to default branch..."
            echo "branch=${{ github.event.repository.default_branch }}" \
            >> "$GITHUB_OUTPUT"
            echo "is_default_branch=true" >> "$GITHUB_OUTPUT"
          else
            echo "Applying protection to non-default branch..."
            echo "branch=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
            echo "is_default_branch=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Apply Branch Protection Rules
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure GitHub token is available
        run: |-
          branch="${{ steps.determine-branch.outputs.branch }}"
          is_default_branch="${{ steps.determine-branch.outputs.is_default_branch }}"

          # Define JSON strings for branch protection settings
          if [[ "${is_default_branch}" == "true" ]]; then
            strict_contexts='["Super Linter"]'
            required_reviews=1
            allow_force_pushes="false"
            allow_deletions="false"
            required_linear_history="true"
          else
            strict_contexts='[]'
            required_reviews="null"
            allow_force_pushes="true"
            allow_deletions="true"
            required_linear_history="false"
          fi

          # Define JSON payloads for status checks and pull request reviews
          status_checks_json="{\"strict\":true,\"contexts\":${strict_contexts}}"
          reviews_json="{\"required_approving_review_count\":${required_reviews},\"dismiss_stale_reviews\":true}"

          echo "Setting branch protection for branch: ${branch}"

          # Perform API request to set branch protection
          gh api --method PUT \
            -H "Authorization: token ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "/repos/${{ github.repository }}/branches/${branch}/protection" \
            -F required_status_checks="${status_checks_json}" \
            -F enforce_admins=false \
            -F required_pull_request_reviews="${reviews_json}" \
            -F restrictions="null" \
            -F allow_force_pushes="${allow_force_pushes}" \
            -F allow_deletions="${allow_deletions}" \
            -F required_linear_history="${required_linear_history}"
