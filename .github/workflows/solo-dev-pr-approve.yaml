---
# Filename: .github/workflows/solo-dev-pr-approve.yaml
name: "Solo Dev PR Approval Workflow"
on:  # yamllint disable-line rule:truthy
  # usage: gh workflow run solo-dev-pr-approve.yaml --field pr_number=<>
  workflow_dispatch:
    inputs:
      pr_number:
        description: "The pull request number to be checked"
        required: true
        type: number
jobs:
  validate-pr:
    uses: ./.github/workflows/pr-qualification-check.yaml
    with:
      pr_number: ${{ inputs.pr_number }}
  auto-approve-pr:
    runs-on: ubuntu-latest
    needs: validate-pr
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Generate JWT and Installation Token
        id: generate-token
        env:
          PRIVATE_KEY: ${{ secrets.AUTO_APPROVE_PRIVATE_KEY }}
          APP_ID: ${{ secrets.AUTO_APPROVE_APP_ID }}
          GH_TOKEN: ${{ github.token }}
        # yamllint disable-line rule:line-length
        run: |-
          echo "$PRIVATE_KEY" > private-key.pem
          chmod 600 private-key.pem

          HEADER=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 | tr -d '=')
          ISSUED_AT=$(date +%s)
          EXPIRATION=$((ISSUED_AT + 600))

          PAYLOAD=$(echo -n "{\"iat\":$ISSUED_AT,\"exp\":$EXPIRATION,\"iss\":$APP_ID}" | base64 | tr -d '=')

          # yamllint disable-line rule:line-length
          SIGNATURE=$(printf "%s.%s" "$HEADER" "$PAYLOAD" | openssl dgst -binary -sha256 \
            -sign private-key.pem | base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')

          JWT="$HEADER.$PAYLOAD.$SIGNATURE"

          INSTALLATION_ID=$(gh api /app/installations -H "Authorization: Bearer $JWT" \
            --jq '.[] | select(.account.login == "'${{ github.repository_owner }}'").id')
          TOKEN=$(gh api --method POST "/app/installations/$INSTALLATION_ID/access_tokens" \
            -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" | jq -r '.token')

          # Set the GitHub CLI token to use the generated installation token
          echo "APP_TOKEN=$TOKEN" >> "$GITHUB_ENV"
          echo "GH_TOKEN=$TOKEN" >> "$GITHUB_ENV"  # To make gh cli recognize the token
      - name: Approve the pull request
        env:
          GH_TOKEN: ${{ env.APP_TOKEN }}
        run: |-
          PR_NUMBER="${{ inputs.pr_number }}"
          ACTOR="${{ github.actor }}"
          REPO_NAME="${{ github.repository }}"
          WORKFLOW_FILE="solo-dev-pr-approve.yaml"

          echo "Approving pull request #$PR_NUMBER"
          BODY="User: $ACTOR issued 'gh workflow run $WORKFLOW_FILE --field pr_number=$PR_NUMBER'.
          This workflow determined that this PR is qualified for automatic approval.
          Approval has been granted by the installed GitHub App 'Auto Approve PRs' to satisfy branch protection rules requiring PR approval."

          # Confirm token availability
          echo "APP_TOKEN is set: ${APP_TOKEN:+"Yes"}"

          # Run the approval command
          if ! gh pr review "$PR_NUMBER" --approve --body "$BODY" --repo "$REPO_NAME"; then
            echo "Failed to auto-approve the PR. Check logs for details."
            exit 1
          fi
